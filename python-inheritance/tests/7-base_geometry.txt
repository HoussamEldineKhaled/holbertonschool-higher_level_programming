>>> import importlib
>>> BaseGeometry = importlib.import_module('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# Test area() method
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# Test integer_validator with valid input
>>> bg.integer_validator("width", 10)  # Should pass silently
>>> bg.integer_validator("height", 5)   # Should pass silently

# Test integer_validator with zero and negative
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

# Test integer_validator with non-integer types
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("coordinates", (4, 5))
Traceback (most recent call last):
...
TypeError: coordinates must be an integer
>>> bg.integer_validator("values", [3])
Traceback (most recent call last):
...
TypeError: values must be an integer
>>> bg.integer_validator("flag", True)
Traceback (most recent call last):
...
TypeError: flag must be an integer
>>> bg.integer_validator("items", {3, 4})
Traceback (most recent call last):
...
TypeError: items must be an integer
>>> bg.integer_validator("nothing", None)
Traceback (most recent call last):
...
TypeError: nothing must be an integer

>>> bg.integer_validator("size", 5.0)
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> bg.integer_validator("big_num", 999999999999999999999999999999999999999999999)
